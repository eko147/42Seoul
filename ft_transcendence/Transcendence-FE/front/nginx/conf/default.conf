server {
	listen 8080 default_server;
	listen [::]:8080;
	
	root /var/www/html;
	index srcs/index.html;

	add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate";
	add_header Pragma "no-cache";

	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}

	location /assets {
		root /var/www/html/srcs;
	}

	location /favicon.ico {
		alias /var/www/html/srcs/assets/favicon.ico;
	}

	location /three {
		root /var/www/html/srcs/node_modules;
		if (!-f $request_filename)
		{
	        rewrite ^(.*)$ $1.js break;
		}
	}

	# TODO: gui module을 위한 설정. 이후 삭제해야 함.
	location /node_modules {
		root /var/www/html/srcs/;
	}

    location / {
        try_files $uri $uri/ @js;
    }

    location @js {
		if (-f $request_filename.js)
		{
	        rewrite ^(.*)$ $1.js break;
		}
		try_files $uri /;
    }

	# location ~* ^.+\.(jpg|jpeg|png|git|webp|ico|css|js)$ {
	# 	access_log off;
	# 	# expires 180d;
	# }
}

server {
	listen 443 ssl;
	listen [::]:443;

	root /var/www/html;
	index srcs/index.html;

	add_header Cache-Control "max-age=0, no-cache, no-store, must-revalidate";
	add_header Pragma "no-cache";

	ssl_certificate /etc/ssl/private/fresh_pong.crt;
	ssl_certificate_key /etc/ssl/private/fresh_pong.key;

	ssl_protocols TLSv1.2 TLSv1.3;

	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}

	location /assets {
		root /var/www/html/srcs;
	}

	location /favicon.ico {
		alias /var/www/html/srcs/assets/favicon.ico;
	}

	location /three {
		root /var/www/html/srcs/node_modules;
		if (!-f $request_filename)
		{
	        rewrite ^(.*)$ $1.js break;
		}
	}

	# TODO: gui module을 위한 설정. 이후 삭제해야 함.
	location /node_modules {
		root /var/www/html/srcs/;
	}

    location / {
        try_files $uri $uri/ @js;
    }

    location @js {
		if (-f $request_filename.js)
		{
	        rewrite ^(.*)$ $1.js break;
		}
		try_files $uri /;
    }

	location /api {
		proxy_pass https://backend:8000;

    	proxy_set_header Host              $host;
		proxy_redirect	 off;
    	proxy_set_header X-Real-IP         $remote_addr;
    	proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto $scheme;
    	proxy_set_header X-Forwarded-Host  $host;
    	proxy_set_header X-Forwarded-Port  $server_port;
	}

}